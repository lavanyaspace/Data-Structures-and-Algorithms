//Merge k sorted arrays
//heap solution
import java.util.*;
public class MergeKSortedArrays
{
  public static void main(String[] args)
  {
    int[] a1 = new int[]{2, 4, 5,  7,9, 19};
    int[] a2= new int[]{3, 6, 7, 11, 21, 27};
    int[] a3= new int[]{1, 8, 13, 14, 19, 25};
    int[] a4= new int[]{12, 34, 45, 67, 78, 90};
    int[][] a = new int[][]{a1, a2, a3, a4};
    int[] r = new int[a.length * a1.length];
    mergeSortedArrays(a,r);
  }
  
  public static void mergeSortedArrays(int[][] a, int[] r)
  {
    int[] track = new int[a.length];
    int index = 0;
    PriorityQueue<Integer> PQ = new PriorityQueue<Integer>();
    	for(int i = 0; i<a.length; i++)
      		PQ.offer(a[i][track[i]]);
    	while(!PQ.isEmpty())
    	{
          int data =  PQ.poll();
          r[index] = data;
          index++;
          for(int k =0; k< a.length ; k++)
          {
            if(track[k] < a[k].length &&  data == a[k][track[k]])
            {
               track[k] = track[k]+1;
               if( track[k] < a[k].length )
                PQ.offer(a[k][track[k]]);
               break;
            }
          }     
        }
    
    for(int k =0; k< r.length; k++)
    {
      System.out.print(r[k]+" ");
    }
   }
 }
