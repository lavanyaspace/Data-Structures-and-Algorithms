//sort the contents of the stack using recursion
import java.util.Stack;
public class SortStack
{
  public static void main( String[] args )
  {
    Stack<Integer> s = new Stack<Integer>();
    s.push(2);
    s.push(7);
    s.push(1);
    s.push(9);
    s.push(8);
    s.push(4);
    sortStack(s);
    while( !s.isEmpty() )
      System.out.print(s.pop()+" ");
  }
  
  public static void sortStack( Stack<Integer> s )
  {
    if(s.isEmpty())return;
    int top = s.pop();
    sortStack(s);
    insertAtBottom(s, top);
  }
  
  public static void insertAtBottom( Stack<Integer> s, int element )
  {
    if(s.isEmpty() || element < s.peek())
      s.push(element);
    else
    {
      int top = s.pop();
      insertAtBottom(s,element);
      s.push(top);
    }
  } 
}
