//Number of ways of parenthesizing an expression given a result
public class ParenthesisExpression
{
  public static void main( String[] args )
  {
    String exp = "1^0|0|1";
    boolean result = true;
    System.out.println(parenthesize(exp,result,0,exp.length()-1));
  }
  
  public static int parenthesize( String exp, boolean result, int s,int e )
  {
    if( s == e )
    {
      if( exp.charAt(s) == '1' && result )
        return 1;
      else if( exp.charAt(s) == '0' && !result )
        return 1;
      return 0;
    }
    
    int c = 0;
    for( int i = s+1; i <= e; i += 2 )
    {
      char op = exp.charAt(i);
      if(result)
      {
        if( op == '&')
          c+= parenthesize(exp,true,s,i-1) * parenthesize(exp,true,i+1,e) ;
        else if( op == '|')
        {
          c += parenthesize(exp,true,s,i-1) * parenthesize(exp,true,i+1,e);
          c += parenthesize(exp,true,s,i-1)* parenthesize(exp,false,i+1,e); 
          c += parenthesize(exp,false,s,i-1) * parenthesize(exp,true,i+1,e);
        }
        else if( op == '^')
        {
          c+= parenthesize(exp,false,s,i-1) * parenthesize(exp,true,s,i-1);
          c+= parenthesize(exp,true,s,i-1) * parenthesize(exp,false,s,i-1);
        }
      }
      else
      {
         if( op == '&')
         {
          c+= parenthesize(exp,true,s,i-1) * parenthesize(exp,false,i+1,e);
          c+= parenthesize(exp,false,s,i-1) * parenthesize(exp,true,i+1,e);
          c+= parenthesize(exp,false,s,i-1) * parenthesize(exp,false,i+1,e);
         }
        else if( op == '|')
          c += parenthesize(exp,false,s,i-1) * parenthesize(exp,false,i+1,e);
    
        else if( op == '^')
        {
          c+= parenthesize(exp,false,s,i-1) * parenthesize(exp,false,s,i-1);
          c+= parenthesize(exp,true,s,i-1) * parenthesize(exp,true,s,i-1);
        }
      }
    }
      return c;
  }
}
