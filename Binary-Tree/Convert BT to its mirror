//Convert BT to its mirror
// Binary Tree Node
import java.util.*;
public class BTN
{
    int data;
    BTN left;
    BTN right;
    
    public BTN( int data ){
        this.data = data;
        right = left = null;
    }
    
    public void setData( int data ){
        this.data = data;
    }
    
    public int getData(){
        return data;
    }
    
    public void setLeft( BTN left ){
        this.left = left;
    }
    
    public BTN getLeft(){
        return left;
    }
    
    public void setRight( BTN right ){
        this.right = right;
    }
    
    public BTN getRight(){
        return right;
    }
}
  
public class BTToMirrorBT
{
  public static void main( String[] args )
  {
    BTN root = new BTN(0);
    root.setLeft(new BTN(1));
    root.getLeft().setLeft( new BTN(3));
    root.getLeft().setRight(new BTN(10));
    root.getLeft().getRight().setLeft( new BTN(4));
    root.getLeft().getLeft().setRight( new BTN(5));
    root.setRight(new BTN(6));
    root.getRight().setLeft(new BTN(8));
    root.getRight().setRight( new BTN(7));
    BTN mirror = convertBT(root);
    inorder(mirror);
  }
  
  public static BTN convertBT( BTN root )
  {
    if( root == null ) return root;
    BTN temp = convertBT(root.getLeft());
    root.setLeft(convertBT(root.getRight()));
    root.setRight(temp);
    return root;
  }
  
  public static void inorder(BTN root)
  {
    if(root == null)return;
    inorder(root.getLeft());
    System.out.print(root.getData()+"  ");
    inorder(root.getRight());
  }
}
