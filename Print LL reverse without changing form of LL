/*
  Insert Node at the end of a linked list 
  head pointer input could be NULL as well for empty list
  Node is defined as 
  class Node {
     int data;
     Node next;
  }
*/
    // This is a "method-only" submission. 
    // You only need to complete this method. 
public Node getNext()
    {
    return this.next;
}
public int getData()
    {
    return this.data;
}
void ReversePrint(Node head) {
  // This is a "method-only" submission. 
  // You only need to complete this method. 
    
    
    if( head == null )
     System.out.println("empty");
    Node current = head;
    int length = 0;
    int i,j;
    
    
    while( current != null )
        {
        length = length + 1 ;
        current = current.getNext();
    }
    for( i = length ; i>0 ; i--)
        {
        current = head;
        for( j = 1; j < i ; j++ )
            {
            current = current.getNext();
        }
        System.out.println(current.getData());
    }

}
