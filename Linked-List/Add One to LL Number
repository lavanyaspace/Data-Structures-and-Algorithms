//Add 1 to a LL
//Linked List Node
class ListNode
{
  int data;
  ListNode next;
  
  //constructor
  public ListNode( int data )
  {
    this.data = data;
    next = null;
  }
  
  public void setData( int data )
  {
    this.data = data;
  }
  
  public int getData()
  {
    return data;
  }
  
  public void setNext( ListNode next )
  {
    this.next = next;
  }
  
  public ListNode getNext()
  {
    return next;
  }
}

// Add 1 to a LL
public class BinaryLinkedList
{
  public static void main(String[] args)
  {
    ListNode head = new ListNode(9);
    head.setNext(new ListNode(9));
    head.getNext().setNext(new ListNode(9));
    head.getNext().getNext().setNext(new ListNode(9));
    head.getNext().getNext().getNext().setNext(new ListNode(9));
    head.getNext().getNext().getNext().getNext().setNext(new ListNode(9));
    head.getNext().getNext().getNext().getNext().getNext().setNext(new ListNode(9));
    head.getNext().getNext().getNext().getNext().getNext().getNext().setNext(new ListNode(9));
    int r = addOne( head );
    if( r == 1 )
    {
      ListNode newNode = new ListNode(1);
      newNode.setNext(head);
      head = newNode;
    }
    while( head != null )
    {
      System.out.print(head.getData()+" ");
      head = head.getNext();
    }
  }
  
  public static int addOne( ListNode head)
  {
     if( head == null ) return 1;
     int r = addOne(head.getNext());
     head.setData(head.getData() + r );
     if( head.getData() > 9 )
     {
       head.setData( head.getData() - 10 );
       return 1;
     }
    return 0;
  }
}
