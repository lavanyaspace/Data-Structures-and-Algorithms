import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
class BTN 
{
    int data;
    BTN left;
    BTN right;
    public BTN( int d )
    {
        data = d;
        left = null;
        right = null;
    }
}

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner s = new Scanner(System.in);
        int nodeCount = s.nextInt();
        BTN[] node = new BTN[nodeCount];
        for( int i = 0; i < nodeCount; i++ )
            node[i] = new BTN(i+1);
        for( int i = 0; i < nodeCount; i++ )
        { 
            int l = s.nextInt();
            int r = s.nextInt();
            node[i].left = ( l == -1 )?null:node[l-1];
            node[i].right = ( r == -1 )?null:node[r-1];
        }
        //inorder(node[0]);
        int T = s.nextInt();
        for( int i = 0 ; i < T; i++ )
        {
            int k = s.nextInt();
            swapBT(node[0],k,0);
            inorder(node[0]);
            System.out.println();
        }  
    }
    
    public static void swapBT( BTN root, int k, int h )
    {
      if( root == null )
          return;
      h = h + 1;
      swapBT(root.left,k,h);
      swapBT(root.right,k,h);
      if( h % k == 0 )
      {
          BTN temp = root.left;
          root.left = root.right;
          root.right = temp;
      }
      
    }
    
    public static void inorder(BTN root)
    {
      if(root == null)return;
      inorder(root.left);
      System.out.print(root.data+" ");
      inorder(root.right);
    }
}
