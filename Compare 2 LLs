/*
  Compare two linked lists A and B
  Return 1 if they are identical and 0 if they are not. 
  Node is defined as 
  class Node {
     int data;
     Node next;
  }
*/
public int getData()
    {
    return this.data;
}
public Node getNext()
    {
    return this.next;
}
int CompareLists(Node headA, Node headB) {
    // This is a "method-only" submission. 
    // You only need to complete this method 
  if(headA == null && headB == null )
      return 1;
  if( headA == null )
      return 0;
  if(headB == null)
      return 0;
    Node currentA = headA;
    Node currentB = headB;
    
    while ( currentA != null || currentB != null )
        {
        if(currentA.getData() == currentB.getData())
            {
            currentA = currentA.getNext();
            currentB = currentB.getNext();
        }
        else return 0;
    }
    if( currentA == null && currentB == null)
        return 1;
    else 
        return 0;
}
