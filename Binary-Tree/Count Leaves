// Binary Tree Node
import java.util.*;
public class BTN
{
    int data;
    BTN left;
    BTN right;
    
    public BTN( int data ){
        this.data = data;
        right = left = null;
    }
    
    public void setData( int data ){
        this.data = data;
    }
    
    public int getData(){
        return data;
    }
    
    public void setLeft( BTN left ){
        this.left = left;
    }
    
    public BTN getLeft(){
        return left;
    }
    
    public void setRight( BTN right ){
        this.right = right;
    }
    
    public BTN getRight(){
        return right;
    }
}

public class LeafCount
{ 
  public static void main( String[] args )
  {  
    BTN root = new BTN(0);
    root.setLeft(new BTN(1));
    root.getLeft().setLeft( new BTN(2));
    root.getLeft().setRight( new BTN(3));
    root.getLeft().getRight().setLeft( new BTN(4));
    root.getLeft().getRight().getLeft().setRight( new BTN(9));
    //root.getLeft().getRight().getLeft().getRight().setLeft( new BTN(10));
    //root.getLeft().getRight().getLeft().getRight().getLeft().setRight( new BTN(11));
    root.getLeft().getRight().setRight( new BTN(5));
    root.setRight(new BTN(6));
    root.getRight().setRight( new BTN(7));
    root.getRight().getRight().setLeft(new BTN(8));
    System.out.println(countLeaves(root));
  }
  
  public static int countLeaves( BTN root )
  {
    if( root == null ) return 0;
    int left = countLeaves(root.getLeft());
    int right = countLeaves(root.getRight());
    
    if( left == 0 && right == 0 )
      return 1;
    return left+right;
  }
}
