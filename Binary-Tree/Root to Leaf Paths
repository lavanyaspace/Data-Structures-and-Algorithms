// Binary Tree Node
import java.util.*;
public class BTN
{
    int data;
    BTN left;
    BTN right;
    
    public BTN( int data ){
        this.data = data;
        right = left = null;
    }
    
    public void setData( int data ){
        this.data = data;
    }
    
    public int getData(){
        return data;
    }
    
    public void setLeft( BTN left ){
        this.left = left;
    }
    
    public BTN getLeft(){
        return left;
    }
    
    public void setRight( BTN right ){
        this.right = right;
    }
    
    public BTN getRight(){
        return right;
    }
}

//Root to Leaf Paths
public class BTPaths
{ 
  public static void main( String[] args )
  {  
      BTN root = new BTN(0);
      root.setLeft(new BTN(1));
      root.getLeft().setLeft( new BTN(2));
      root.getLeft().setRight( new BTN(3));
      root.getLeft().getRight().setLeft( new BTN(4));
      root.getLeft().getRight().setRight( new BTN(5));
      root.setRight(new BTN(6));
      root.getRight().setRight( new BTN(7));
      root.getRight().getRight().setLeft(new BTN(8));
      startPaths(root);
  }
  
  public static void startPaths( BTN root )
  {
    ArrayList<Integer> path = new ArrayList<Integer>();
    getPaths(root,path);
  }
  public static void getPaths( BTN root, ArrayList<Integer> path)
  {
    if( root == null ) return;
    path.add(root.getData());
    if( root.getLeft() == null && root.getRight() == null )
      System.out.println(path.toString());
    getPaths( root.getLeft(), path);
    getPaths( root.getRight(), path);
    path.remove(path.size()-1);
  }
}
