//longest valid paranthesis substring
import java.util.Stack;
public class ParanthesisSubstring
{
  public static void main( String[] args )
  {
    String s = "))))(())";
    int length = checkValidSubstring(s);
    System.out.println(length);
  }
  
  public static int checkValidSubstring( String s )
  {
    if( s.length() == 0 ) 
      return Integer.MIN_VALUE;
    Stack<Character> stack = new Stack<Character>();
    int count = 0;
    for( int i = 0; i < s.length(); i++ )
    {
      if( s.charAt(i) == ')' )
      {
        if(!stack.isEmpty())
        {
        	stack.pop();
        	count++;
        }
        else if( stack.isEmpty() && count!= 0 )
          return count * 2;
      }
       
      else if ( s.charAt(i) == '(' )
         stack.push(s.charAt(i));
    }
      return count * 2;
  }
}
