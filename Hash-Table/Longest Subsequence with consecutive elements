//Longest Subsequence with consecutive elements
//subsequence - need not be contiguous in the array
import java.util.*;
public class ConsecutiveSubsequence
{
  public static void main( String[] args )
  {
    int[] a = {36, 41, 56, 35, 44, 33, 34, 92, 43, 32, 42};
    getSubsequence(a);
  }
  
  public static void getSubsequence( int[] a )
  {
    if( a.length == 0 ) return;
    HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
    int length = 0;
    for( int i = 0; i<a.length; i++ )
    {
      map.put(a[i],a[i]); 
    }
    for( int i = 0; i<a.length; i++ )
    {
      if( map.get(a[i]-1) == null )
      {
        int len = 1;
        for( int j = 1; j<a.length; j++ )
      	{
           if( map.get(a[i]+j) != null )
             len++;
           else break;
        }
        if( len > length ) length = len;
      }
    }
    System.out.println(length);
  }
}
