//Boggle Board Game
//Find all words on the board that are present in the dictionary 
//DFS and visited array
public class Boggle
{
  public static void main( String[] args )
  {
    //char[][] board = {{'q','w','e','r','t','y'},{'a','s','d','f','g','h'},{'z','x','c','v','b','n'},{'p','o','i','u','l','k'},{'j','m','n','b','v','c'}};
    char[][] board = {{'q','w','e'},{'a','s','d'},{'g','h','j'}};
    String[] dict = {"a","as","ox","red","bun","coin","lucixa","gviop","water","winter"};
    boggle(board,dict);
  }
  
  public static void boggle( char[][] board, String[] dict )
  {
    boolean[][] visited = new boolean[board.length][board[0].length];
    StringBuilder word = new StringBuilder();
    word.append("");
    for( int i = 0; i<board.length; i++ )
      for( int j = 0; j<board[0].length; j++ )
        DFS(i,j,board,dict,visited,word);
  }
  
  public static void DFS( int i, int j, char[][] board, String[] dict, boolean[][] visited, StringBuilder word )
  {
    visited[i][j] = true;
    word.append(board[i][j]);
    //System.out.println(word.toString());
    if( wordinDict(dict,word) )
      System.out.println(word.toString());
    for( int k = i-1; k <= i+1; k++ )
      for( int l = j-1; l <= j+1; l++ )
      {
        //System.out.println("here");
      	if( k>=0 && k < board.length && l >=0 && l < board[0].length && !visited[k][l] )
      		DFS(k,l,board,dict,visited,word);
      }
    word.deleteCharAt(word.length()-1);
    visited[i][j] = false;
    
  }
  
 public static boolean wordinDict( String[] dict, StringBuilder word )
 {
   //System.out.println(word.toString());
   for( int i = 0; i < dict.length; i++ )
     if( dict[i].equals(word.toString()))
   	 {
     	//System.out.println(word.toString());
     	return true;
     }
   return false;
 }
}
