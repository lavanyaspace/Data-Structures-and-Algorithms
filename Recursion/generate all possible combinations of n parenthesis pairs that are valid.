//generate all possible combinations of n parenthesis pairs that are valid.
import java.util.*;
public class ParenthesisCombinations
{
  public static void main( String[] args )
  {
    Set<String> a = generateParenthesis(10);
    for( String s : a  )
      System.out.println(s);
  }
  
  public static Set<String> generateParenthesis( int n )
  {
    Set<String> set = new HashSet<String>();
    if( n == 0 )
      set.add("");
    else
    {
      Set<String> prev = generateParenthesis( n-1 );
      for( String str : prev )
      {
        for( int i = 0; i < str.length(); i++ )
        {
          if( str.charAt(i) == '(' )
          {
            String s = insert(str,i);
            set.add(s);
          }
        }
        if( !set.contains("()"+str))
        	set.add("()"+str);
      }
      
      
    }
    return set;
  }
  
   public static String insert( String s, int index )
   {
     String left = s.substring(0,index+1);
     String right = s.substring(index+1,s.length());
     return left+"()"+right;
   }
  
}
